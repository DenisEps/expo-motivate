{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/d_kuprin/expo-motivate/client/src/components/IconSelect/index.js\";\nimport React, { useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { vectorIcons, kittenIcons } from \"../../assets/icons\";\nimport { Layout, TopNavigation, TopNavigationAction, Input, Button } from '@ui-kitten/components';\n\nvar Item = function Item(_ref) {\n  var item = _ref.item,\n      _onPress = _ref.onPress,\n      style = _ref.style;\n  if (!vectorIcons[item]) return null;\n  var icon = vectorIcons[item]({\n    size: 35,\n    color: '#FFFFFF'\n  });\n  return React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      _onPress();\n    },\n    style: [styles.item, style],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, icon);\n};\n\nvar IconSelect = function IconSelect(_ref2) {\n  var route = _ref2.route,\n      navigation = _ref2.navigation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedId = _useState2[0],\n      setSelectedId = _useState2[1];\n\n  var setIcon = route.params.setIcon;\n\n  var renderBackAction = function renderBackAction() {\n    return React.createElement(TopNavigationAction, {\n      onPress: back,\n      icon: kittenIcons.BackIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }\n    });\n  };\n\n  var back = function back() {\n    navigation.goBack();\n  };\n\n  var renderItem = function renderItem(_ref3) {\n    var item = _ref3.item;\n    var backgroundColor = item === selectedId ? \"#7E0087\" : \"#5B58AF\";\n    return React.createElement(Item, {\n      item: item,\n      onPress: function onPress() {\n        setSelectedId(item);\n        setIcon(item);\n      },\n      style: {\n        backgroundColor: backgroundColor\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    });\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, React.createElement(Layout, {\n    style: styles.backButton,\n    level: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, React.createElement(TopNavigation, {\n    alignment: \"center\",\n    accessoryLeft: renderBackAction,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  })), React.createElement(FlatList, {\n    data: Object.keys(vectorIcons),\n    renderItem: renderItem,\n    keyExtractor: function keyExtractor(item) {\n      return item;\n    },\n    extraData: selectedId,\n    numColumns: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  backButton: {\n    justifyContent: 'flex-start'\n  },\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight || 0,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  item: {\n    padding: 20,\n    marginVertical: 8,\n    marginHorizontal: 16,\n    borderRadius: 15,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  title: {\n    fontSize: 32\n  }\n});\nexport default IconSelect;","map":{"version":3,"sources":["/Users/d_kuprin/expo-motivate/client/src/components/IconSelect/index.js"],"names":["React","useState","vectorIcons","kittenIcons","Layout","TopNavigation","TopNavigationAction","Input","Button","Item","item","onPress","style","icon","size","color","styles","IconSelect","route","navigation","selectedId","setSelectedId","setIcon","params","renderBackAction","back","BackIcon","goBack","renderItem","backgroundColor","container","backButton","Object","keys","StyleSheet","create","justifyContent","flex","marginTop","StatusBar","currentHeight","alignItems","padding","marginVertical","marginHorizontal","borderRadius","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","title","fontSize"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { FlatList, SafeAreaView, StatusBar, StyleSheet, Text, TouchableOpacity } from \"react-native\";\nimport { vectorIcons, kittenIcons } from '../../assets/icons';\nimport {\n  Layout,\n  TopNavigation,\n  TopNavigationAction,\n  Input,\n  Button,\n} from '@ui-kitten/components';\n\nconst Item = ({ item, onPress, style }) => {\n\n  if (!vectorIcons[item]) return null;\n  const icon = vectorIcons[item]({ size: 35, color: '#FFFFFF' });\n\n  return (\n    <TouchableOpacity onPress={() => {\n      onPress();\n    }} style={[styles.item, style]}>\n      {icon}\n    </TouchableOpacity>\n  )\n};\n\nconst IconSelect = ({ route, navigation }) => {\n  const [selectedId, setSelectedId] = useState(null);\n  const { setIcon } = route.params;\n  const renderBackAction = () => (\n    <TopNavigationAction onPress={back} icon={kittenIcons.BackIcon} />\n  );\n\n  const back = () => {\n    navigation.goBack();\n  };\n\n  const renderItem = ({ item }) => {\n    const backgroundColor = item === selectedId ? \"#7E0087\" : \"#5B58AF\";\n\n    return (\n      <Item\n        item={item}\n        onPress={() => {\n          setSelectedId(item);\n          setIcon(item)\n        }}\n        style={{ backgroundColor }}\n      />\n    );\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <Layout style={styles.backButton} level=\"1\">\n        <TopNavigation\n          alignment=\"center\"\n          accessoryLeft={renderBackAction}\n        />\n      </Layout>\n      <FlatList\n        data={Object.keys(vectorIcons)}\n        renderItem={renderItem}\n        keyExtractor={(item) => item}\n        extraData={selectedId}\n        numColumns={3}\n      />\n    </SafeAreaView >\n  );\n};\n\nconst styles = StyleSheet.create({\n  backButton: {\n    justifyContent: 'flex-start'\n  },\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight || 0,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  item: {\n    padding: 20,\n    marginVertical: 8,\n    marginHorizontal: 16,\n    borderRadius: 15,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n\n    elevation: 5,\n  },\n  title: {\n    fontSize: 32,\n  },\n});\n\nexport default IconSelect;"]},"metadata":{},"sourceType":"module"}