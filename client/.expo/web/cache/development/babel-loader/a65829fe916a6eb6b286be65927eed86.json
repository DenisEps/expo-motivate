{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { SET_HABITS, DEL_HABIT, EDIT_HABIT, SET_IMG, SET_USER, DELETE_USER, USER_AUTH } from \"./action-types\";\nexport function habitReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_HABITS:\n      return action.payload;\n\n    case EDIT_HABIT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        title: state.map(function (habit) {\n          if (habit.id === action.payload.id) {\n            return _objectSpread(_objectSpread({}, habit), {}, {\n              title: action.payload.title\n            });\n          }\n        })\n      });\n\n    case DEL_HABIT:\n      return state.filter(function (_ref) {\n        var id = _ref.id;\n        return id !== action.payload;\n      });\n\n    default:\n      return state;\n  }\n}\nexport function userReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_USER:\n      return action.payload;\n\n    case DELETE_USER:\n      return action.payload;\n\n    case USER_AUTH:\n      return action.payload;\n\n    default:\n      return state;\n  }\n}\nexport default {\n  habitReducer: habitReducer\n};","map":{"version":3,"sources":["/Users/d_kuprin/expo-motivate/client/src/redux/reducers.js"],"names":["SET_HABITS","DEL_HABIT","EDIT_HABIT","SET_IMG","SET_USER","DELETE_USER","USER_AUTH","habitReducer","state","action","type","payload","title","map","habit","id","filter","userReducer"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,UAAhC,EAA4CC,OAA5C,EAAqDC,QAArD,EAA+DC,WAA/D,EAA4EC,SAA5E;AAEA,OAAO,SAASC,YAAT,GAA0C;AAAA,MAApBC,KAAoB,uEAAZ,EAAY;AAAA,MAARC,MAAQ;;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,UAAL;AACE,aAAOS,MAAM,CAACE,OAAd;;AACF,SAAKT,UAAL;AACE,6CACKM,KADL;AAEEI,QAAAA,KAAK,EAAEJ,KAAK,CAACK,GAAN,CAAU,UAACC,KAAD,EAAW;AAC1B,cAAIA,KAAK,CAACC,EAAN,KAAaN,MAAM,CAACE,OAAP,CAAeI,EAAhC,EAAoC;AAClC,mDAAYD,KAAZ;AAAmBF,cAAAA,KAAK,EAAEH,MAAM,CAACE,OAAP,CAAeC;AAAzC;AACD;AACF,SAJM;AAFT;;AAQF,SAAKX,SAAL;AACE,aAAOO,KAAK,CAACQ,MAAN,CAAa;AAAA,YAAGD,EAAH,QAAGA,EAAH;AAAA,eAAYA,EAAE,KAAKN,MAAM,CAACE,OAA1B;AAAA,OAAb,CAAP;;AACF;AACE,aAAOH,KAAP;AAfJ;AAiBD;AAED,OAAO,SAASS,WAAT,GAA2C;AAAA,MAAtBT,KAAsB,uEAAd,IAAc;AAAA,MAARC,MAAQ;;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,QAAL;AACE,aAAOK,MAAM,CAACE,OAAd;;AAEF,SAAKN,WAAL;AACE,aAAOI,MAAM,CAACE,OAAd;;AAEF,SAAKL,SAAL;AACE,aAAOG,MAAM,CAACE,OAAd;;AAEF;AACE,aAAOH,KAAP;AAXJ;AAaD;AAED,eAAe;AACbD,EAAAA,YAAY,EAAZA;AADa,CAAf","sourcesContent":["import { SET_HABITS, DEL_HABIT, EDIT_HABIT, SET_IMG, SET_USER, DELETE_USER, USER_AUTH } from './action-types';\n\nexport function habitReducer(state = [], action) {\n  switch (action.type) {\n    case SET_HABITS:\n      return action.payload;\n    case EDIT_HABIT:\n      return {\n        ...state,\n        title: state.map((habit) => {\n          if (habit.id === action.payload.id) {\n            return { ...habit, title: action.payload.title };\n          }\n        }),\n      };\n    case DEL_HABIT:\n      return state.filter(({ id }) => id !== action.payload);\n    default:\n      return state;\n  }\n}\n\nexport function userReducer(state = null, action) {\n  switch (action.type) {\n    case SET_USER:\n      return action.payload;\n\n    case DELETE_USER:\n      return action.payload;\n\n    case USER_AUTH:\n      return action.payload;\n\n    default:\n      return state;\n  }\n}\n\nexport default {\n  habitReducer,\n}\n"]},"metadata":{},"sourceType":"module"}